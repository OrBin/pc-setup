##### Start of zshrc, based on what was generated by zsh/oh-my-zsh

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="or"

# Configure the output format of "time" command to look almost like in bash
# See ttps://unix.stackexchange.com/a/562651/70501
TIMEFMT=$'real\t%E\nuser\t%U\nsys\t%S'

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git pyenv)

{{ pyenv_loading_for_zshrc }}

source $ZSH/oh-my-zsh.sh

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

export EDITOR='nano'

unsetopt autocd

##### End of zshrc, based on what was generated by zsh/oh-my-zsh


eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"

alias cat='batcat'
alias ping='prettyping --nolegend'
alias top='htop'
alias du='ncdu -rr'

set_bluez_cards_profile() {
    for card in $(pactl list short cards | cut -d $'\t' -f 2 | grep bluez_card); do
        pactl set-card-profile "${card}" "${1}"
    done
}
alias headset_zoom="set_bluez_cards_profile headset_head_unit"
alias headset_music="set_bluez_cards_profile a2dp_sink"

if command -v pycharm-professional > /dev/null; then
    alias charm=pycharm-professional
else
    alias charm=pycharm-community
fi

toucharm() {
    touch "$1" && charm "$1"
}

touchngo() {
    touch "$1" && goland "$1"
}

kill_kde_app() {
    timeout 5 kquitapp5 $1 || killall $1 || true
}

restart_kde_app() {
    kill_kde_app $1 && kstart5 $1
}

restart_kde_app_with_sleep() {
    kill_kde_app $1 && sleep 2s && kstart5 $1
}

rebase_onto() {
    git fetch && git rebase "origin/$1"
}

rebase_default() {
  default_branch=$(git rev-parse --abbrev-ref origin/HEAD)
  git fetch && git rebase "$default_branch"
}

alias rebase_main=rebase_default

alias ecr_login='$(aws ecr get-login | sed -E "s/-e none //")'
alias current_branch='git rev-parse --abbrev-ref HEAD'
alias github_user="grep -P '\Wuser:' ~/.config/gh/hosts.yml  | cut -d ':' -f2 | sed 's/ //'"
alias github_token="grep -P '\Woauth_token:' ~/.config/gh/hosts.yml  | cut -d ':' -f2 | sed 's/ //'"
alias last_runs='gh run list --branch "$(current_branch)" --user "$(github_user)" --limit 10'

export PATH="$HOME/bin:$PATH"
export FX_THEME=8

export PYENV_VIRTUALENV_DISABLE_PROMPT=1  # This is handled by oh-my-zsh anyway

FPATH=$(brew --prefix)/share/zsh-completions:$FPATH

autoload -Uz compinit
compinit

source ~/.zsh_completion

if [ -f "${HOME}/.zshrc.local" ]; then
  source "${HOME}/.zshrc.local"
fi

{{ hstr_configuration_for_zshrc }}
{{ thefuck_alias_for_zshrc }}

unlock_pdf() {
  file=$1
  password=$2
  tempfile=$(mktemp)
  pdftk $file input_pw "${password}" output $tempfile
  mv $tempfile $file
}
