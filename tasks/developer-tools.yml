---
- name: Download GitHub CLI GPG key public ring
  get_url:
    url: https://cli.github.com/packages/githubcli-archive-keyring.gpg
    dest: /usr/share/keyrings/githubcli-archive-keyring.gpg
    mode: "0644"
  become: yes

- name: Add GitHub CLI apt repository into sources list
  apt_repository:
    repo: "deb [arch={{packages_architecture}} signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main"
    filename: /etc/apt/sources.list.d/github-cli
    update_cache: yes
  become: yes

- name: Install developer tools (apt)
  apt:
    name:
    - gh
    - git
    - nmap
    - wireshark
    - adb
  become: yes

- name: Evaluate completion for GitHub CLI
  shell: gh completion -s bash
  register: gh_completion

- name: Add GitHub CLI completion to bash configuration
  blockinfile:
    block: "{{gh_completion.stdout}}"
    path: "{{user_bashrc_file_path}}"
    marker: ""

- name: Install developer tools (snap)
  snap:
    name:
    - doctl
    - multipass
    - shellcheck
  become: yes

- name: Connect doctl to ssh-keys interface
  shell: snap connect doctl:ssh-keys :ssh-keys
  become: yes

- name: Install Docker
  import_role:
    name: geerlingguy.docker
  vars:
    docker_apt_arch: "{{packages_architecture}}"
    docker_users:
      - "{{ansible_user_id}}"  # Self user (the user running this setup)
  become: yes

- name: Install dive
  apt:
    deb: "https://github.com/wagoodman/dive/releases/download/v{{dive_version}}/dive_{{dive_version}}_linux_{{packages_architecture}}.deb"
  become: yes

- name: Install JetBrains IDEs
  snap:
    name: "{{ jetbrains_ides }}"
    classic: yes
  become: yes

# TODO install IDE extensions (e.g. TabNine)

# TODO check installed VS Code version: dpkg -s code | grep '^Version:' | cut -d ' ' -f 2-
#  then check the version that the download url below redirects to, using https://docs.ansible.com/ansible/latest/collections/ansible/builtin/uri_module.html
-
- name: Download VS Code
  get_url:
    url: https://code.visualstudio.com/sha/download?build=stable&os=linux-deb-x64
    dest: "{{temp_dir}}"
    mode: "0644"
  register: download_vscode
  when: computer_type == "work"

- name: Install VS Code
  apt:
    deb: "{{ download_vscode.dest }}"
  become: yes
  when: computer_type == "work"

- name: Install Postman
  snap:
    name: postman
    channel: "{{postman_snap_channel}}"
  become: yes

- name: Download and extract AWS CLI
  unarchive:
    src: "https://awscli.amazonaws.com/awscli-exe-linux-{{ansible_architecture}}.zip"
    dest: "{{temp_dir}}"
    remote_src: yes
  register: unarchive_awscli

- name: Install AWS CLI
  shell: "{{unarchive_awscli.dest}}/aws/install --update"
  become: yes

- name: Install NodeJS
  import_role:
    name: geerlingguy.nodejs
  become: yes

- name: Install Yarn
  npm:
    name: yarn
    global: yes
  become: yes

- name: Install Go
  import_role:
    name: geerlingguy.go
  vars:
    go_platform: linux
    go_arch: "{{ packages_architecture }}"
  become: yes

- name: Install diff-so-fancy
  npm:
    name: diff-so-fancy
    global: yes
  become: yes

- name: Configure diff-so-fancy in git config
  git_config:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    scope: global
  loop: "{{ config | dict2items }}"
  vars:
    config:
      core.pager: "diff-so-fancy | less --tabs=4 -RFX"
      interactive.diffFilter: "diff-so-fancy --patch"
      color.ui: "true"
      color.diff-highlight.oldNormal: "red bold"
      color.diff-highlight.oldHighlight: "red bold 52"
      color.diff-highlight.newNormal: "green bold"
      color.diff-highlight.newHighlight: "green bold 22"
      color.diff.meta: "11"
      color.diff.frag: "magenta bold"
      color.diff.func: "146 bold"
      color.diff.commit: "yellow bold"
      color.diff.old: "red bold"
      color.diff.new: "green bold"
      color.diff.whitespace: "red reverse"

- name: Check Lens' latest version
  uri:
    url: https://api.k8slens.dev/binaries/latest.json
  register: lens_latest_version_response

# TODO save lens version after installation in a file, then check it in the next run and compare to latest version
-
- name: Download Lens
  get_url:
    url: "https://api.k8slens.dev/binaries/Lens-{{ lens_latest_version_response.json.version }}.{{ packages_architecture }}.deb"
    dest: "{{temp_dir}}"
    mode: "444"
  become: yes
  register: download_lens

- name: Install Lens
  apt:
    deb:  "{{ download_lens.dest }}"
  become: yes

- name: Install developer tools (snap - classic)
  snap:
    name:
    - kubectl
    - helm
    classic: yes
  become: yes

- name: "Evaluate completions"
  shell: |
    "{{ item }}" completion bash | tee $HOME/.{{ item }}_bash_completion
    echo 'source $HOME/.{{ item }}_bash_completion' >> "{{ user_bashrc_file_path }}"
  loop:
    - kubectl
    - helm

- name: Install pyenv
  import_role:
    name: avanov.pyenv
  vars:
    pyenv_setting_path: "{{user_bashrc_file_path}}"

- name: Add pyenv path to PATH in user bashrc
  lineinfile:
    path: "{{user_bashrc_file_path}}"
    line: 'eval "$(pyenv init --path)"'

- name: Install ansible-lint
  pip:
    name: "ansible-lint[core,community,yamllint]"
  become: yes

- name: Install Terraform CLI
  import_role:
    name: robertdebock.terraform
  when: computer_type == "work"
  become: yes

- name: Install snapcraft
  snap:
    name: snapcraft
    classic: yes
  when: computer_type == "work"
  become: yes
