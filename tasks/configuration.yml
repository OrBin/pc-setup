---
- name: Update user .bashrc
  blockinfile:
    block: "{{ lookup('file', user_bashrc_file_path) }}"
    path: "{{ ansible_user_dir }}/.bashrc"
    backup: yes
    marker: "# {mark} ANSIBLE MANAGED BLOCK"

- name: Create directory for personal internal scripts
  file:
    path: "{{ ansible_user_dir }}/bin"
    state: directory

- name: Copy xdg-open workaround script
  template:
    src: "{{playbook_dir}}/configuration/xdg-open"
    dest: "{{ ansible_user_dir }}/bin/xdg-open"
    mode: 0775

- name: Update xkbrc
  ini_file:
    path: "{{ ansible_user_dir }}/.config/kxkbrc"
    section: Layout
    option: "{{ item.key }}"
    value: "{{ item.value }}"
    no_extra_spaces: yes
  loop: "{{ layout_section | dict2items }}"
  # Not using ini lookup as input since it does not return the keys, only the values
  vars:
    layout_section:
      DisplayNames: ","
      LayoutList: "us,il"
      LayoutLoopCount: "-1"
      Model: "pc101"
      Options: "grp:alt_shift_toggle,grp:lalt_lshift_toggle"
      ResetOldOptions: "true"
      SwitchMode: "Global"
      Use: "true"
      VariantList: ","
  when: configure_kde

- name: Reload keyboard configuration
  shell: dbus-send --session /Layouts org.kde.keyboard.reloadConfig
  when: configure_kde

- name: Configure git user name
  git_config:
    name: user.name
    value: Or Bin
    scope: global

- name: Configure git aliases
  git_config:
    name: "alias.{{ item.key }}"
    value: "{{ item.value }}"
    scope: global
  loop: "{{ aliases | dict2items }}"
  vars:
    aliases:
      co: checkout

- name: Configure plasma desktop applets
  template:
    src: "{{playbook_dir}}/configuration/plasma-org.kde.plasma.desktop-appletsrc"
    dest: "{{ ansible_user_dir }}/.config/plasma-org.kde.plasma.desktop-appletsrc"
  when: configure_kde

# TODO conditionally add slack to taskbar (in plasma-org.kde.plasma.desktop-appletsrc)

- name: Configure KDE
  shell: |
    lookandfeeltool -a org.kde.breezedark.desktop

    kwriteconfig5 --file kwinrc --group TabBox --key LayoutName thumbnail_grid
    kwriteconfig5 --file kwinrc --group NightColor --key Active true
    kwriteconfig5 --file kwinrc --group NightColor --key NightTemperature 5500
    
    kwriteconfig5 --file kded5rc --group "Module-browserintegrationreminder" --key autoload false
    
    #kwriteconfig5 --file kglobalshortcutsrc --group plasmashell --key "activate widget 4" "Meta+F1,none,Activate Application Launcher Widget"
    
    #kwriteconfig5 --file kglobalshortcutsrc --group kwin --key "Window Quick Tile Top" "none,none,Quick Tile Window to the Top"
    #kwriteconfig5 --file kglobalshortcutsrc --group kwin --key "Window Maximize" "Meta+Up,Meta+Up,Maximize Window"
    
    # current_activity_id=$(kreadconfig5 --file kactivitymanagerdrc --group main --key currentActivity)
    # kwriteconfig5 --file kactivitymanagerd-statsrc --group "Favorites-org.kde.plasma.kickoff.favorites.instance-4-global" --key ordering "applications:telegram-desktop_telegram-desktop.desktop,applications:org.kde.plasma-systemmonitor.desktop,applications:org.kde.kate.desktop,applications:pycharm-professional_pycharm-professional.desktop,applications:goland_goland.desktop,applications:systemsettings.desktop,applications:org.kde.discover.desktop,applications:org.kde.kcalc.desktop"
    # kwriteconfig5 --file kactivitymanagerd-statsrc --group "Favorites-org.kde.plasma.kickoff.favorites.instance-4-${current_activity_id}" --key ordering "applications:telegram-desktop_telegram-desktop.desktop,applications:org.kde.plasma-systemmonitor.desktop,applications:org.kde.kate.desktop,applications:pycharm-professional_pycharm-professional.desktop,applications:goland_goland.desktop,applications:systemsettings.desktop,applications:org.kde.discover.desktop,applications:org.kde.kcalc.desktop"
    
    kwin_x11 --replace &
    (timeout 5 kquitapp5 kglobalaccel5 || killall kglobalaccel5 || true) && sleep 2s && kstart5 kglobalaccel5
    (timeout 5 kquitapp5 plasmashell || killall plasmashell || true) && kstart5 plasmashell
  when: configure_kde

# See this (hopefully) safer alternative to configuring KDE:
# https://develop.kde.org/docs/plasma/scripting/
# https://develop.kde.org/docs/plasma/scripting/examples

- name: Configure GitHub CLI
  shell: gh config set git_protocol ssh

- name: Find Cura configuration directory
  find:
    paths: "{{ ansible_user_dir }}/.local/share/cura/"
    recurse: no
    file_type: directory
    use_regex: yes
    patterns: ['[0-9\.]+']
  register: find_cura_config_dir

- name: Save Cura configuration directory
  set_fact:
    cura_config_dir: "{{ find_cura_config_dir.files[0].path }}"

- name: Configure Cura
  ini_file:
    path: "{{ cura_config_dir }}/cura.cfg"
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  loop: "{{ cura_configuration }}"
